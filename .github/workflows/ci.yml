name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  unit:
    name: 'Unit Tests'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install MySQL 8
      run: sudo bash ./.github/scripts/mysql8.sh
    - name: Prepare Environment
      run: cp .env.example .env
    - name: Install Composer Dependencies
      run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
    - name: Generate Application Key
      run: php artisan key:generate
    - name: Create Database
      run: mysql --user="homestead" --password="secret" -e "CREATE DATABASE testing character set UTF8mb4 collate utf8mb4_bin;"
    - name: Run PHPUnit
      env:
        DB_USERNAME: homestead
        DB_PASSWORD: secret
      run: php vendor/bin/phpunit --filter=Unit

  feature:
    name: 'Feature Tests'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install MySQL 8
      run: sudo bash ./.github/scripts/mysql8.sh
    - name: Prepare Environment
      run: cp .env.example .env
    - name: Install Composer Dependencies
      run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader
    - name: Install Package Dependencies
      run: npm ci
    - name: Compile Assets
      run: npm run production
    - name: Generate Application Key
      run: php artisan key:generate
    - name: Create Database
      run: mysql --user="homestead" --password="secret" -e "CREATE DATABASE testing character set UTF8mb4 collate utf8mb4_bin;"
    - name: Run PHPUnit
      env:
        DB_USERNAME: homestead
        DB_PASSWORD: secret
      run: php vendor/bin/phpunit --filter=Feature
  style:
    name: 'Coding Style'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install PHPCS
      run: composer global require "squizlabs/php_codesniffer" --no-progress --no-suggest --prefer-dist --optimize-autoloader
    - name: Run PHPCS
      run: phpcs app/ --standard=PSR2
