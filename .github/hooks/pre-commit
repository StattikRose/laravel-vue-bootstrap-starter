#!/bin/bash

ERRORS=0

echo -e "Committing as $(git config user.name)"
echo -e "$(git status)"
echo -e "$(git add .)"

# for linting js files
function lintit () {
  echo -e "\n ------------------------ ESLINT ------------------------\n"

  OUTPUT=$(git diff --cached --name-only --diff-filter=ACM | grep -E '(.vue|.js)$')

  OUTPUT=${OUTPUT//.eslintrc.js/}
  a=("${OUTPUT}")

  if [[ $a == "" ]]; then
    return
  fi

  e=$(npx eslint -c .eslintrc.js $a)

  if [[ "$e" != "" ]]; then
    echo -e "$e"
    echo -e "\nERROR: Check eslint hints."
    ERRORS=1
  fi
}
lintit

# for linting php files
function phplint () {
  echo -e "\n ------------------------ PHP LINT ------------------------ \r\n"
  echo $(php -v)
  echo -e "\r"

  OUTPUT=$(git diff --cached --name-only --diff-filter=ACM | grep -E '(.php)$')

  if [[ "$OUTPUT" = "" ]]; then
    return
  fi

  for i in $(git diff --cached --name-only --diff-filter=ACM | grep -E '(.php)$')
    do
    p=$(php -l $i)

    if [[ "$p" != *"No syntax errors detected"* ]]; then
      echo -e "\n"$i - $p
    fi

    if [[ "$p" != *"No syntax errors detected"* && ERRORS != 1 ]]; then
      ERRORS="1"
    fi
  done
}
phplint

# for phpcs files
function phpcs () {
  echo -e "\n ------------------------ PHPCS ------------------------ \r"

  p=$(php ./vendor/bin/phpcs -qp --standard=PSR2 app/*)

    if [[ "$p" != "" ]]; then
      echo -e "\n$i - $p"
    fi

    if [[ "$p" != "" && ERRORS != 1 ]]; then
      ERRORS="1"
    fi
    return
}
phpcs

echo -e "\r"

if [[ "$ERRORS" != "0" ]]; then
  echo -e "---- Errors were found and the commit was rejected. ---- \r\n"
  exit 1 #reject
else
  exit 0 #accept
fi
